{"ast":null,"code":"import _objectSpread from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport http from 'http';\nimport https from 'https';\nimport urlMod from 'url';\nimport { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\nvar HttpResponse = /*#__PURE__*/function (_BaseResponse) {\n  _inherits(HttpResponse, _BaseResponse);\n  var _super = _createSuper(HttpResponse);\n  /**\n   * BaseResponse facade for node HTTP/HTTPS API Response\n   * @param {http.ServerResponse} response\n   */\n  function HttpResponse(response, dataPromise) {\n    var _this;\n    _classCallCheck(this, HttpResponse);\n    _this = _super.call(this);\n    _this.response = response;\n    _this.dataPromise = dataPromise;\n    return _this;\n  }\n  _createClass(HttpResponse, [{\n    key: \"status\",\n    get: function get() {\n      return this.response.statusCode;\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader(name) {\n      return this.response.headers[name];\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.dataPromise;\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n      return getData;\n    }()\n  }]);\n  return HttpResponse;\n}(BaseResponse);\nexport var HttpClient = /*#__PURE__*/function (_BaseClient) {\n  _inherits(HttpClient, _BaseClient);\n  var _super2 = _createSuper(HttpClient);\n  function HttpClient(url) {\n    var _this2;\n    _classCallCheck(this, HttpClient);\n    _this2 = _super2.call(this, url);\n    _this2.parsedUrl = urlMod.parse(_this2.url);\n    _this2.httpApi = _this2.parsedUrl.protocol === 'http:' ? http : https;\n    return _this2;\n  }\n  _createClass(HttpClient, [{\n    key: \"constructRequest\",\n    value: function constructRequest(headers, signal) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        var request = _this3.httpApi.get(_objectSpread(_objectSpread({}, _this3.parsedUrl), {}, {\n          headers: headers\n        }), function (response) {\n          var dataPromise = new Promise(function (resolveData) {\n            var chunks = [];\n\n            // collect chunks\n            response.on('data', function (chunk) {\n              chunks.push(chunk);\n            });\n\n            // concatenate all chunks and resolve the promise with the resulting buffer\n            response.on('end', function () {\n              var data = Buffer.concat(chunks).buffer;\n              resolveData(data);\n            });\n            response.on('error', reject);\n          });\n          resolve(new HttpResponse(response, dataPromise));\n        });\n        request.on('error', reject);\n        if (signal) {\n          if (signal.aborted) {\n            request.destroy(new AbortError('Request aborted'));\n          }\n          signal.addEventListener('abort', function () {\n            return request.destroy(new AbortError('Request aborted'));\n          });\n        }\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _ref,\n          headers,\n          signal,\n          response,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, headers = _ref.headers, signal = _ref.signal;\n              _context2.next = 3;\n              return this.constructRequest(headers, signal);\n            case 3:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function request() {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }]);\n  return HttpClient;\n}(BaseClient);","map":{"version":3,"names":["http","https","urlMod","BaseClient","BaseResponse","AbortError","HttpResponse","_BaseResponse","_inherits","_super","_createSuper","response","dataPromise","_this","_classCallCheck","call","_createClass","key","get","statusCode","value","getHeader","name","headers","_getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","sent","abrupt","stop","getData","apply","arguments","HttpClient","_BaseClient","_super2","url","_this2","parsedUrl","parse","httpApi","protocol","constructRequest","signal","_this3","Promise","resolve","reject","request","_objectSpread","resolveData","chunks","on","chunk","push","Buffer","concat","buffer","aborted","destroy","addEventListener","_request","_callee2","_ref","_args2","_callee2$","_context2","length","undefined"],"sources":["/home/umang/iHub/DFS_ReactViewer/client/node_modules/geotiff/dist-module/source/client/http.js"],"sourcesContent":["import http from 'http';\nimport https from 'https';\nimport urlMod from 'url';\n\nimport { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass HttpResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for node HTTP/HTTPS API Response\n   * @param {http.ServerResponse} response\n   */\n  constructor(response, dataPromise) {\n    super();\n    this.response = response;\n    this.dataPromise = dataPromise;\n  }\n\n  get status() {\n    return this.response.statusCode;\n  }\n\n  getHeader(name) {\n    return this.response.headers[name];\n  }\n\n  async getData() {\n    const data = await this.dataPromise;\n    return data;\n  }\n}\n\nexport class HttpClient extends BaseClient {\n  constructor(url) {\n    super(url);\n    this.parsedUrl = urlMod.parse(this.url);\n    this.httpApi = (this.parsedUrl.protocol === 'http:' ? http : https);\n  }\n\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const request = this.httpApi.get(\n        {\n          ...this.parsedUrl,\n          headers,\n        },\n        (response) => {\n          const dataPromise = new Promise((resolveData) => {\n            const chunks = [];\n\n            // collect chunks\n            response.on('data', (chunk) => {\n              chunks.push(chunk);\n            });\n\n            // concatenate all chunks and resolve the promise with the resulting buffer\n            response.on('end', () => {\n              const data = Buffer.concat(chunks).buffer;\n              resolveData(data);\n            });\n            response.on('error', reject);\n          });\n          resolve(new HttpResponse(response, dataPromise));\n        },\n      );\n      request.on('error', reject);\n\n      if (signal) {\n        if (signal.aborted) {\n          request.destroy(new AbortError('Request aborted'));\n        }\n        signal.addEventListener('abort', () => request.destroy(new AbortError('Request aborted')));\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}