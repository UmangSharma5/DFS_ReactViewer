{"ast":null,"code":"import _classCallCheck from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { inflate } from 'pako';\nimport Lerc from 'lerc';\nimport BaseDecoder from './basedecoder.js';\nimport { LercParameters, LercAddCompression } from '../globals.js';\nvar LercDecoder = /*#__PURE__*/function (_BaseDecoder) {\n  _inherits(LercDecoder, _BaseDecoder);\n  var _super = _createSuper(LercDecoder);\n  function LercDecoder(fileDirectory) {\n    var _this;\n    _classCallCheck(this, LercDecoder);\n    _this = _super.call(this);\n    _this.planarConfiguration = typeof fileDirectory.PlanarConfiguration !== 'undefined' ? fileDirectory.PlanarConfiguration : 1;\n    _this.samplesPerPixel = typeof fileDirectory.SamplesPerPixel !== 'undefined' ? fileDirectory.SamplesPerPixel : 1;\n    _this.addCompression = fileDirectory.LercParameters[LercParameters.AddCompression];\n    return _this;\n  }\n  _createClass(LercDecoder, [{\n    key: \"decodeBlock\",\n    value: function decodeBlock(buffer) {\n      switch (this.addCompression) {\n        case LercAddCompression.None:\n          break;\n        case LercAddCompression.Deflate:\n          buffer = inflate(new Uint8Array(buffer)).buffer; // eslint-disable-line no-param-reassign, prefer-destructuring\n          break;\n        default:\n          throw new Error(\"Unsupported LERC additional compression method identifier: \".concat(this.addCompression));\n      }\n      var lercResult = Lerc.decode(buffer, {\n        returnPixelInterleavedDims: this.planarConfiguration === 1\n      });\n      var lercData = lercResult.pixels[0];\n      return lercData.buffer;\n    }\n  }]);\n  return LercDecoder;\n}(BaseDecoder);\nexport { LercDecoder as default };","map":{"version":3,"names":["inflate","Lerc","BaseDecoder","LercParameters","LercAddCompression","LercDecoder","_BaseDecoder","_inherits","_super","_createSuper","fileDirectory","_this","_classCallCheck","call","planarConfiguration","PlanarConfiguration","samplesPerPixel","SamplesPerPixel","addCompression","AddCompression","_createClass","key","value","decodeBlock","buffer","None","Deflate","Uint8Array","Error","concat","lercResult","decode","returnPixelInterleavedDims","lercData","pixels","default"],"sources":["/home/umang/iHub/DFS_ReactViewer/client/node_modules/geotiff/dist-module/compression/lerc.js"],"sourcesContent":["import { inflate } from 'pako';\nimport Lerc from 'lerc';\nimport BaseDecoder from './basedecoder.js';\nimport { LercParameters, LercAddCompression } from '../globals.js';\n\nexport default class LercDecoder extends BaseDecoder {\n  constructor(fileDirectory) {\n    super();\n\n    this.planarConfiguration = typeof fileDirectory.PlanarConfiguration !== 'undefined' ? fileDirectory.PlanarConfiguration : 1;\n    this.samplesPerPixel = typeof fileDirectory.SamplesPerPixel !== 'undefined' ? fileDirectory.SamplesPerPixel : 1;\n\n    this.addCompression = fileDirectory.LercParameters[LercParameters.AddCompression];\n  }\n\n  decodeBlock(buffer) {\n    switch (this.addCompression) {\n      case LercAddCompression.None:\n        break;\n      case LercAddCompression.Deflate:\n        buffer = inflate(new Uint8Array(buffer)).buffer; // eslint-disable-line no-param-reassign, prefer-destructuring\n        break;\n      default:\n        throw new Error(`Unsupported LERC additional compression method identifier: ${this.addCompression}`);\n    }\n\n    const lercResult = Lerc.decode(buffer, { returnPixelInterleavedDims: this.planarConfiguration === 1 });\n    const lercData = lercResult.pixels[0];\n    return lercData.buffer;\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,OAAO,QAAQ,MAAM;AAC9B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,SAASC,cAAc,EAAEC,kBAAkB,QAAQ,eAAe;AAAC,IAE9CC,WAAW,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EAC9B,SAAAA,YAAYK,aAAa,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,WAAA;IACzBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IAEAF,KAAA,CAAKG,mBAAmB,GAAG,OAAOJ,aAAa,CAACK,mBAAmB,KAAK,WAAW,GAAGL,aAAa,CAACK,mBAAmB,GAAG,CAAC;IAC3HJ,KAAA,CAAKK,eAAe,GAAG,OAAON,aAAa,CAACO,eAAe,KAAK,WAAW,GAAGP,aAAa,CAACO,eAAe,GAAG,CAAC;IAE/GN,KAAA,CAAKO,cAAc,GAAGR,aAAa,CAACP,cAAc,CAACA,cAAc,CAACgB,cAAc,CAAC;IAAC,OAAAR,KAAA;EACpF;EAACS,YAAA,CAAAf,WAAA;IAAAgB,GAAA;IAAAC,KAAA,EAED,SAAAC,YAAYC,MAAM,EAAE;MAClB,QAAQ,IAAI,CAACN,cAAc;QACzB,KAAKd,kBAAkB,CAACqB,IAAI;UAC1B;QACF,KAAKrB,kBAAkB,CAACsB,OAAO;UAC7BF,MAAM,GAAGxB,OAAO,CAAC,IAAI2B,UAAU,CAACH,MAAM,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC;UACjD;QACF;UACE,MAAM,IAAII,KAAK,+DAAAC,MAAA,CAA+D,IAAI,CAACX,cAAc,CAAE,CAAC;MACxG;MAEA,IAAMY,UAAU,GAAG7B,IAAI,CAAC8B,MAAM,CAACP,MAAM,EAAE;QAAEQ,0BAA0B,EAAE,IAAI,CAAClB,mBAAmB,KAAK;MAAE,CAAC,CAAC;MACtG,IAAMmB,QAAQ,GAAGH,UAAU,CAACI,MAAM,CAAC,CAAC,CAAC;MACrC,OAAOD,QAAQ,CAACT,MAAM;IACxB;EAAC;EAAA,OAAAnB,WAAA;AAAA,EAxBsCH,WAAW;AAAA,SAA/BG,WAAW,IAAA8B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}