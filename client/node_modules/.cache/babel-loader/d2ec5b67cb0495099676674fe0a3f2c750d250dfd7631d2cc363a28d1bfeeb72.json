{"ast":null,"code":"import _classCallCheck from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport BaseDecoder from './basedecoder.js';\nvar PackbitsDecoder = /*#__PURE__*/function (_BaseDecoder) {\n  _inherits(PackbitsDecoder, _BaseDecoder);\n  var _super = _createSuper(PackbitsDecoder);\n  function PackbitsDecoder() {\n    _classCallCheck(this, PackbitsDecoder);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PackbitsDecoder, [{\n    key: \"decodeBlock\",\n    value: function decodeBlock(buffer) {\n      var dataView = new DataView(buffer);\n      var out = [];\n      for (var i = 0; i < buffer.byteLength; ++i) {\n        var header = dataView.getInt8(i);\n        if (header < 0) {\n          var next = dataView.getUint8(i + 1);\n          header = -header;\n          for (var j = 0; j <= header; ++j) {\n            out.push(next);\n          }\n          i += 1;\n        } else {\n          for (var _j = 0; _j <= header; ++_j) {\n            out.push(dataView.getUint8(i + _j + 1));\n          }\n          i += header + 1;\n        }\n      }\n      return new Uint8Array(out).buffer;\n    }\n  }]);\n  return PackbitsDecoder;\n}(BaseDecoder);\nexport { PackbitsDecoder as default };","map":{"version":3,"names":["BaseDecoder","PackbitsDecoder","_BaseDecoder","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","decodeBlock","buffer","dataView","DataView","out","i","byteLength","header","getInt8","next","getUint8","j","push","Uint8Array","default"],"sources":["/home/umang/iHub/DFS_ReactViewer/client/node_modules/geotiff/dist-module/compression/packbits.js"],"sourcesContent":["import BaseDecoder from './basedecoder.js';\n\nexport default class PackbitsDecoder extends BaseDecoder {\n  decodeBlock(buffer) {\n    const dataView = new DataView(buffer);\n    const out = [];\n\n    for (let i = 0; i < buffer.byteLength; ++i) {\n      let header = dataView.getInt8(i);\n      if (header < 0) {\n        const next = dataView.getUint8(i + 1);\n        header = -header;\n        for (let j = 0; j <= header; ++j) {\n          out.push(next);\n        }\n        i += 1;\n      } else {\n        for (let j = 0; j <= header; ++j) {\n          out.push(dataView.getUint8(i + j + 1));\n        }\n        i += header + 1;\n      }\n    }\n    return new Uint8Array(out).buffer;\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,WAAW,MAAM,kBAAkB;AAAC,IAEtBC,eAAe,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAAA,SAAAA,gBAAA;IAAAK,eAAA,OAAAL,eAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,eAAA;IAAAS,GAAA;IAAAC,KAAA,EAClC,SAAAC,YAAYC,MAAM,EAAE;MAClB,IAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACF,MAAM,CAAC;MACrC,IAAMG,GAAG,GAAG,EAAE;MAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,UAAU,EAAE,EAAED,CAAC,EAAE;QAC1C,IAAIE,MAAM,GAAGL,QAAQ,CAACM,OAAO,CAACH,CAAC,CAAC;QAChC,IAAIE,MAAM,GAAG,CAAC,EAAE;UACd,IAAME,IAAI,GAAGP,QAAQ,CAACQ,QAAQ,CAACL,CAAC,GAAG,CAAC,CAAC;UACrCE,MAAM,GAAG,CAACA,MAAM;UAChB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,MAAM,EAAE,EAAEI,CAAC,EAAE;YAChCP,GAAG,CAACQ,IAAI,CAACH,IAAI,CAAC;UAChB;UACAJ,CAAC,IAAI,CAAC;QACR,CAAC,MAAM;UACL,KAAK,IAAIM,EAAC,GAAG,CAAC,EAAEA,EAAC,IAAIJ,MAAM,EAAE,EAAEI,EAAC,EAAE;YAChCP,GAAG,CAACQ,IAAI,CAACV,QAAQ,CAACQ,QAAQ,CAACL,CAAC,GAAGM,EAAC,GAAG,CAAC,CAAC,CAAC;UACxC;UACAN,CAAC,IAAIE,MAAM,GAAG,CAAC;QACjB;MACF;MACA,OAAO,IAAIM,UAAU,CAACT,GAAG,CAAC,CAACH,MAAM;IACnC;EAAC;EAAA,OAAAZ,eAAA;AAAA,EAtB0CD,WAAW;AAAA,SAAnCC,eAAe,IAAAyB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}