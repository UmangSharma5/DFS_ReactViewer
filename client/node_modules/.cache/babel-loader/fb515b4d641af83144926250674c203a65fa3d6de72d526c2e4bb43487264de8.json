{"ast":null,"code":"var _jsxFileName = \"/home/umang/iHub/DFS_ReactViewer/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN_URL = \"https://datafoundation.iiit.ac.in/api/login\";\nvar tokenId = localStorage.getItem(\"token\");\nfunction logoutUser() {\n  localStorage.clear();\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Login, {\n    checkUser: checkUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 19\n  }, this), document.getElementById(\"root\"));\n}\nasync function checkAuth(email) {\n  const GET_URL = \"https://datafoundation.iiit.ac.in/api/detokn?token=\" + tokenId;\n  try {\n    const response = await axios.get(GET_URL);\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n      logout: logoutUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this), document.getElementById(\"root\"));\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        basename: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }, this));\n  } catch (error) {\n    console.log(\"Incorrect token!!!\");\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(Login, {\n      checkUser: checkUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this), document.getElementById(\"root\"));\n  }\n}\nasync function checkUser(email, password) {\n  try {\n    const response = await axios.post(LOGIN_URL, {\n      email,\n      password\n    });\n    localStorage.setItem(\"token\", response.data.data.token);\n    tokenId = localStorage.getItem(\"token\");\n    await checkAuth(email);\n    return true;\n  } catch (error) {\n    console.log(\"Incorrect Username or password!!!\");\n    return false;\n  }\n}\ncheckAuth();","map":{"version":3,"names":["React","ReactDOM","App","Login","axios","jsxDEV","_jsxDEV","LOGIN_URL","tokenId","localStorage","getItem","logoutUser","clear","render","checkUser","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","checkAuth","email","GET_URL","response","get","logout","root","createRoot","StrictMode","children","BrowserRouter","basename","error","console","log","password","post","setItem","data","token"],"sources":["/home/umang/iHub/DFS_ReactViewer/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login';\nimport axios from 'axios';\n\nconst LOGIN_URL = \"https://datafoundation.iiit.ac.in/api/login\";\nvar tokenId = localStorage.getItem(\"token\");\n\n\nfunction logoutUser () {\n  localStorage.clear();\n  ReactDOM.render(<Login checkUser = {checkUser} />, document.getElementById(\"root\")); \n}\n\n\nasync function checkAuth(email) {\n  const GET_URL = \"https://datafoundation.iiit.ac.in/api/detokn?token=\"+tokenId;\n  try {\n    const response = await axios.get(GET_URL);\n    ReactDOM.render(<App logout={logoutUser} />, document.getElementById(\"root\"));\n\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render( <React.StrictMode>\n          <BrowserRouter basename>\n\n          </BrowserRouter>\n      </React.StrictMode>\n    );\n\n  } catch (error) {\n    console.log(\"Incorrect token!!!\");\n    ReactDOM.render(<Login checkUser={checkUser} />, document.getElementById(\"root\"));\n  }\n}\n\n\nasync function checkUser(email, password) {\n  try {\n    const response = await axios.post(LOGIN_URL, { email, password });\n    localStorage.setItem(\"token\", response.data.data.token);\n    tokenId = localStorage.getItem(\"token\");\n    await checkAuth(email);\n    return true;\n  } catch (error) {\n    console.log(\"Incorrect Username or password!!!\");\n    return false;\n  }\n}\n\ncheckAuth();\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAG,6CAA6C;AAC/D,IAAIC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAG3C,SAASC,UAAUA,CAAA,EAAI;EACrBF,YAAY,CAACG,KAAK,CAAC,CAAC;EACpBX,QAAQ,CAACY,MAAM,eAACP,OAAA,CAACH,KAAK;IAACW,SAAS,EAAIA;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACrF;AAGA,eAAeC,SAASA,CAACC,KAAK,EAAE;EAC9B,MAAMC,OAAO,GAAG,qDAAqD,GAACf,OAAO;EAC7E,IAAI;IACF,MAAMgB,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACF,OAAO,CAAC;IACzCtB,QAAQ,CAACY,MAAM,eAACP,OAAA,CAACJ,GAAG;MAACwB,MAAM,EAAEf;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;IAE7E,MAAMO,IAAI,GAAG1B,QAAQ,CAAC2B,UAAU,CAACT,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;IACjEO,IAAI,CAACd,MAAM,eAAEP,OAAA,CAACN,KAAK,CAAC6B,UAAU;MAAAC,QAAA,eACxBxB,OAAA,CAACyB,aAAa;QAACC,QAAQ;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACpB,CAAC;EAEH,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjClC,QAAQ,CAACY,MAAM,eAACP,OAAA,CAACH,KAAK;MAACW,SAAS,EAAEA;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;EACnF;AACF;AAGA,eAAeN,SAASA,CAACQ,KAAK,EAAEc,QAAQ,EAAE;EACxC,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMpB,KAAK,CAACiC,IAAI,CAAC9B,SAAS,EAAE;MAAEe,KAAK;MAAEc;IAAS,CAAC,CAAC;IACjE3B,YAAY,CAAC6B,OAAO,CAAC,OAAO,EAAEd,QAAQ,CAACe,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC;IACvDhC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACvC,MAAMW,SAAS,CAACC,KAAK,CAAC;IACtB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,OAAO,KAAK;EACd;AACF;AAEAd,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}