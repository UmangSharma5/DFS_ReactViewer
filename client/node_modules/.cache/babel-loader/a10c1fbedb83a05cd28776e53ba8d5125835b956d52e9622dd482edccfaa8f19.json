{"ast":null,"code":"import _toConsumableArray from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { safeIfNeeded } from \"./_util/arrayIterator.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_util/converter.mjs\";\nimport { DataViewPrototypeGetUint16, DataViewPrototypeSetUint16 } from \"./_util/primordials.mjs\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset) {\n  for (var _len = arguments.length, opts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    opts[_key - 2] = arguments[_key];\n  }\n  return convertToNumber(DataViewPrototypeGetUint16.apply(void 0, [dataView, byteOffset].concat(_toConsumableArray(safeIfNeeded(opts)))));\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value) {\n  for (var _len2 = arguments.length, opts = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n    opts[_key2 - 3] = arguments[_key2];\n  }\n  return DataViewPrototypeSetUint16.apply(void 0, [dataView, byteOffset, roundToFloat16Bits(value)].concat(_toConsumableArray(safeIfNeeded(opts))));\n}","map":{"version":3,"names":["safeIfNeeded","convertToNumber","roundToFloat16Bits","DataViewPrototypeGetUint16","DataViewPrototypeSetUint16","getFloat16","dataView","byteOffset","_len","arguments","length","opts","Array","_key","apply","concat","_toConsumableArray","setFloat16","value","_len2","_key2"],"sources":["/home/umang/iHub/DFS_ReactViewer/client/node_modules/@petamoriken/float16/src/DataView.mjs"],"sourcesContent":["import { safeIfNeeded } from \"./_util/arrayIterator.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_util/converter.mjs\";\nimport {\n  DataViewPrototypeGetUint16,\n  DataViewPrototypeSetUint16,\n} from \"./_util/primordials.mjs\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n  return convertToNumber(\n    DataViewPrototypeGetUint16(dataView, byteOffset, ...safeIfNeeded(opts))\n  );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n  return DataViewPrototypeSetUint16(\n    dataView,\n    byteOffset,\n    roundToFloat16Bits(value),\n    ...safeIfNeeded(opts)\n  );\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,2BAA2B;AACxD,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,uBAAuB;AAC3E,SACEC,0BAA0B,EAC1BC,0BAA0B,QACrB,yBAAyB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAEC,UAAU,EAAW;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EACtD,OAAOZ,eAAe,CACpBE,0BAA0B,CAAAW,KAAA,UAACR,QAAQ,EAAEC,UAAU,EAAAQ,MAAA,CAAAC,kBAAA,CAAKhB,YAAY,CAACW,IAAI,CAAC,GACxE,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,UAAUA,CAACX,QAAQ,EAAEC,UAAU,EAAEW,KAAK,EAAW;EAAA,SAAAC,KAAA,GAAAV,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAO,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAJT,IAAI,CAAAS,KAAA,QAAAX,SAAA,CAAAW,KAAA;EAAA;EAC7D,OAAOhB,0BAA0B,CAAAU,KAAA,UAC/BR,QAAQ,EACRC,UAAU,EACVL,kBAAkB,CAACgB,KAAK,CAAC,EAAAH,MAAA,CAAAC,kBAAA,CACtBhB,YAAY,CAACW,IAAI,CAAC,EACvB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}