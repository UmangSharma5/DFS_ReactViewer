{"ast":null,"code":"import _regeneratorRuntime from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { applyPredictor } from '../predictor.js';\nvar BaseDecoder = /*#__PURE__*/function () {\n  function BaseDecoder() {\n    _classCallCheck(this, BaseDecoder);\n  }\n  _createClass(BaseDecoder, [{\n    key: \"decode\",\n    value: function () {\n      var _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(fileDirectory, buffer) {\n        var decoded, predictor, isTiled, tileWidth, tileHeight;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.decodeBlock(buffer);\n            case 2:\n              decoded = _context.sent;\n              predictor = fileDirectory.Predictor || 1;\n              if (!(predictor !== 1)) {\n                _context.next = 9;\n                break;\n              }\n              isTiled = !fileDirectory.StripOffsets;\n              tileWidth = isTiled ? fileDirectory.TileWidth : fileDirectory.ImageWidth;\n              tileHeight = isTiled ? fileDirectory.TileLength : fileDirectory.RowsPerStrip || fileDirectory.ImageLength;\n              return _context.abrupt(\"return\", applyPredictor(decoded, predictor, tileWidth, tileHeight, fileDirectory.BitsPerSample, fileDirectory.PlanarConfiguration));\n            case 9:\n              return _context.abrupt(\"return\", decoded);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function decode(_x, _x2) {\n        return _decode.apply(this, arguments);\n      }\n      return decode;\n    }()\n  }]);\n  return BaseDecoder;\n}();\nexport { BaseDecoder as default };","map":{"version":3,"names":["applyPredictor","BaseDecoder","_classCallCheck","_createClass","key","value","_decode","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fileDirectory","buffer","decoded","predictor","isTiled","tileWidth","tileHeight","wrap","_callee$","_context","prev","next","decodeBlock","sent","Predictor","StripOffsets","TileWidth","ImageWidth","TileLength","RowsPerStrip","ImageLength","abrupt","BitsPerSample","PlanarConfiguration","stop","decode","_x","_x2","apply","arguments","default"],"sources":["/home/umang/iHub/DFS_ReactViewer/client/node_modules/geotiff/dist-module/compression/basedecoder.js"],"sourcesContent":["import { applyPredictor } from '../predictor.js';\n\nexport default class BaseDecoder {\n  async decode(fileDirectory, buffer) {\n    const decoded = await this.decodeBlock(buffer);\n    const predictor = fileDirectory.Predictor || 1;\n    if (predictor !== 1) {\n      const isTiled = !fileDirectory.StripOffsets;\n      const tileWidth = isTiled ? fileDirectory.TileWidth : fileDirectory.ImageWidth;\n      const tileHeight = isTiled ? fileDirectory.TileLength : (\n        fileDirectory.RowsPerStrip || fileDirectory.ImageLength\n      );\n      return applyPredictor(\n        decoded, predictor, tileWidth, tileHeight, fileDirectory.BitsPerSample,\n        fileDirectory.PlanarConfiguration,\n      );\n    }\n    return decoded;\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,cAAc,QAAQ,iBAAiB;AAAC,IAE5BC,WAAW;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;EAAA;EAAAE,YAAA,CAAAF,WAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,OAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAC9B,SAAAC,QAAaC,aAAa,EAAEC,MAAM;QAAA,IAAAC,OAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAC,SAAA,EAAAC,UAAA;QAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACV,IAAI,CAACC,WAAW,CAACX,MAAM,CAAC;YAAA;cAAxCC,OAAO,GAAAO,QAAA,CAAAI,IAAA;cACPV,SAAS,GAAGH,aAAa,CAACc,SAAS,IAAI,CAAC;cAAA,MAC1CX,SAAS,KAAK,CAAC;gBAAAM,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACXP,OAAO,GAAG,CAACJ,aAAa,CAACe,YAAY;cACrCV,SAAS,GAAGD,OAAO,GAAGJ,aAAa,CAACgB,SAAS,GAAGhB,aAAa,CAACiB,UAAU;cACxEX,UAAU,GAAGF,OAAO,GAAGJ,aAAa,CAACkB,UAAU,GACnDlB,aAAa,CAACmB,YAAY,IAAInB,aAAa,CAACoB,WAC7C;cAAA,OAAAX,QAAA,CAAAY,MAAA,WACMhC,cAAc,CACnBa,OAAO,EAAEC,SAAS,EAAEE,SAAS,EAAEC,UAAU,EAAEN,aAAa,CAACsB,aAAa,EACtEtB,aAAa,CAACuB,mBAChB,CAAC;YAAA;cAAA,OAAAd,QAAA,CAAAY,MAAA,WAEInB,OAAO;YAAA;YAAA;cAAA,OAAAO,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAAzB,OAAA;MAAA,CACf;MAAA,SAAA0B,OAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAhC,OAAA,CAAAiC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,MAAA;IAAA;EAAA;EAAA,OAAAnC,WAAA;AAAA;AAAA,SAhBkBA,WAAW,IAAAwC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}