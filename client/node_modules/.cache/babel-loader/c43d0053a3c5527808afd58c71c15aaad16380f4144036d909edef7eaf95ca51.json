{"ast":null,"code":"import _regeneratorRuntime from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/umang/iHub/DFS_ReactViewer/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport var BaseSource = /*#__PURE__*/function () {\n  function BaseSource() {\n    _classCallCheck(this, BaseSource);\n  }\n  _createClass(BaseSource, [{\n    key: \"fetch\",\n    value:\n    /**\n     *\n     * @param {Slice[]} slices\n     * @returns {ArrayBuffer[]}\n     */\n    function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(slices) {\n        var _this = this;\n        var signal,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              signal = _args.length > 1 && _args[1] !== undefined ? _args[1] : undefined;\n              return _context.abrupt(\"return\", Promise.all(slices.map(function (slice) {\n                return _this.fetchSlice(slice, signal);\n              })));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function fetch(_x) {\n        return _fetch.apply(this, arguments);\n      }\n      return fetch;\n    }()\n    /**\n     *\n     * @param {Slice} slice\n     * @returns {ArrayBuffer}\n     */\n  }, {\n    key: \"fetchSlice\",\n    value: function () {\n      var _fetchSlice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(slice) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              throw new Error(\"fetching of slice \".concat(slice, \" not possible, not implemented\"));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function fetchSlice(_x2) {\n        return _fetchSlice.apply(this, arguments);\n      }\n      return fetchSlice;\n    }()\n    /**\n     * Returns the filesize if already determined and null otherwise\n     */\n  }, {\n    key: \"fileSize\",\n    get: function get() {\n      return null;\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }]);\n  return BaseSource;\n}();","map":{"version":3,"names":["BaseSource","_classCallCheck","_createClass","key","value","_fetch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","slices","_this","signal","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","abrupt","Promise","all","map","slice","fetchSlice","stop","fetch","_x","apply","_fetchSlice","_callee2","_callee2$","_context2","Error","concat","_x2","get","_close","_callee3","_callee3$","_context3","close"],"sources":["/home/umang/iHub/DFS_ReactViewer/client/node_modules/geotiff/dist-module/source/basesource.js"],"sourcesContent":["/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,WAAaA,UAAU;EAAA,SAAAA,WAAA;IAAAC,eAAA,OAAAD,UAAA;EAAA;EAAAE,YAAA,CAAAF,UAAA;IAAAG,GAAA;IAAAC,KAAA;IACrB;AACF;AACA;AACA;AACA;IAJE;MAAA,IAAAC,MAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAKA,SAAAC,QAAYC,MAAM;QAAA,IAAAC,KAAA;QAAA,IAAAC,MAAA;UAAAC,KAAA,GAAAC,SAAA;QAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAEP,MAAM,GAAAC,KAAA,CAAAO,MAAA,QAAAP,KAAA,QAAAQ,SAAA,GAAAR,KAAA,MAAGQ,SAAS;cAAA,OAAAJ,QAAA,CAAAK,MAAA,WAC7BC,OAAO,CAACC,GAAG,CAChBd,MAAM,CAACe,GAAG,CAAC,UAACC,KAAK;gBAAA,OAAKf,KAAI,CAACgB,UAAU,CAACD,KAAK,EAAEd,MAAM,CAAC;cAAA,EACtD,CAAC;YAAA;YAAA;cAAA,OAAAK,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAnB,OAAA;MAAA,CACF;MAAA,SAAAoB,MAAAC,EAAA;QAAA,OAAAzB,MAAA,CAAA0B,KAAA,OAAAjB,SAAA;MAAA;MAAA,OAAAe,KAAA;IAAA;IAED;AACF;AACA;AACA;AACA;EAJE;IAAA1B,GAAA;IAAAC,KAAA;MAAA,IAAA4B,WAAA,GAAA1B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAKA,SAAAyB,SAAiBP,KAAK;QAAA,OAAAnB,mBAAA,GAAAQ,IAAA,UAAAmB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAjB,IAAA,GAAAiB,SAAA,CAAAhB,IAAA;YAAA;cAAA,MACd,IAAIiB,KAAK,sBAAAC,MAAA,CAAsBX,KAAK,mCAAgC,CAAC;YAAA;YAAA;cAAA,OAAAS,SAAA,CAAAP,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA,CAC5E;MAAA,SAAAN,WAAAW,GAAA;QAAA,OAAAN,WAAA,CAAAD,KAAA,OAAAjB,SAAA;MAAA;MAAA,OAAAa,UAAA;IAAA;IAED;AACF;AACA;EAFE;IAAAxB,GAAA;IAAAoC,GAAA,EAGA,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI;IACb;EAAC;IAAApC,GAAA;IAAAC,KAAA;MAAA,IAAAoC,MAAA,GAAAlC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAiC,SAAA;QAAA,OAAAlC,mBAAA,GAAAQ,IAAA,UAAA2B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzB,IAAA,GAAAyB,SAAA,CAAAxB,IAAA;YAAA;YAAA;cAAA,OAAAwB,SAAA,CAAAf,IAAA;UAAA;QAAA,GAAAa,QAAA;MAAA,CAEC;MAAA,SAAAG,MAAA;QAAA,OAAAJ,MAAA,CAAAT,KAAA,OAAAjB,SAAA;MAAA;MAAA,OAAA8B,KAAA;IAAA;EAAA;EAAA,OAAA5C,UAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}